@{
  ViewBag.Tab = "About";
}
<section>
  <div class="container-wide p-b--l">
    <h1 class="text-center m-b">About Chocolatey</h1>
    <section class="about">
      <h2 class="text-center m-b">What is Chocolatey?</h2>
      <p>
        <strong>Chocolatey is a package manager for Windows (like apt-get or yum but for
          Windows)</strong>. It was designed to be a <strong>decentralized</strong> framework
        for quickly installing applications and tools that you need. It is built on the
        NuGet infrastructure currently using PowerShell as its focus for delivering packages
        from the distros to your door, err computer.
      </p>
      <p>Chocolatey is a single, unified interface designed to easily work with all aspects of managing Windows software using a packaging framework that understands both versioning and dependency requirements. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file. Chocolatey packages can be used independently, but also integrate with configuration managers like <a href="@Url.RouteUrl(RouteName.Docs, new { docName = "features-infrastructure-automation" })">SCCM, Puppet, and Chef</a>. Chocolatey is trusted by businesses all over the world to manage their software deployments on Windows. You’ve never had so much fun managing software!</p>
      <p>
        Chocolatey is brought to you by the work and inspiration of the community, the work
        and thankless nights of the <a href="https://github.com/orgs/chocolatey/people">
                                      Chocolatey Team</a>, and <a href="https://twitter.com/ferventcoder">Rob</a> heading
        up the direction.
      </p>
      <p>
        You can <strong>host your own sources</strong> and add them to Chocolatey, you can
        extend Chocolatey's capabilities, and folks, it's only going to get better.
      </p>
      <p>
        With all of this in mind, <strong>think of Chocolatey as a framework</strong> that
        you can build on top of. <a href="@Url.RouteUrl(RouteName.Docs, new { docName = "features-infrastructure-automation" })">Chef, <strong>Puppet</strong>, Boxstarter, PowerShell DSC, Ansible, Saltstack, etc</a> all have ways for using Chocolatey
        to ensure the state of a computer and packages installed. <strong><em>Even Microsoft
                                                                            has decided to use Chocolatey's framework</em></strong> with the <a href="https://github.com/OneGet/oneget">
                                                                                                                                                        PowerShell PackageManagement / OneGet</a> package manager aggregator! See Jeffrey Snover's <a href="http://blogs.technet.com/b/windowsserver/archive/2014/04/03/windows-management-framework-v5-preview.aspx">
                                                                                                                                                                                                  post</a> for more information.
      </p>
    </section>
  </div>
</section>
<div class="bg-two p-t--l p-b--l">
  <section class="clearfix p-l p-r p-t--l p-b--l container-wide">
      <h2 class="text-center m-b">About Chocolatey.org</h2>
      <p>
        Chocolatey.org is a feed of packages provided and maintained by the community. If
        you are a business looking at using Chocolatey, it is strongly recommended that
        you do not use the community feed. See the question below on trusting the community
        feed.
      </p>
      <p>
        Chocolatey.org is currently a fork of the NuGet gallery. Over time Chocolatey.org
        is planned to be rewritten as a totally custom website. The Chocolatey team has
        over 20 years of experience in writing fast, efficient and secure websites.
      </p>
      <p>
        Package moderation was implemented in October 2014. Every version of a package that 
        comes through goes through at least two forms of automated review. If the package
        is not a trusted package, then a human must check over what is not easy for a
        computer to find to ensure that the packages are not doing anything malicious, but
        installing the software they state they are installing. Moderation does not check
        that the software that the package installs is free of crapware (at least not as 
        of February 2016).
      </p>
      <p>
        Future security enhancements like package signing are planned to increase the security of the
        community feed. Bear with us, this is going to take time to get into place. The
        plan is that a moderator would review and sign off on a package with a cryptographic
        key. Users of Chocolatey would only need to trust moderators. As moderators are
        shifted, updates of Chocolatey will reflect this. There will also be an out of band
        way for users to trust a new maintainer. <br />
        For other security enhancements, please see <a href="@Url.RouteUrl(RouteName.Security)#chocolateyorg-the-community-feed">Security and the community feed</a>.
      </p>
      <p>
        The repository for issues/enhancements/requests for Chocolatey.org at <a href="https://github.com/chocolatey/chocolatey.org">
                                                                                GitHub Chocolatey.org</a>
      </p>
         
        </section>
</div>
<div class="bg-three p-t--l p-b--l">
  <section class="clearfix p-l p-r p-t--l p-b--l container-wide">
      <h2 class="text-center m-b">About the Official Chocolatey Client</h2>
      <p>
        The official Chocolatey client is the one you get from chocolatey.org on the <a href="https://chocolatey.org/packages/chocolatey">
                                                                                       package page</a>. This is the only official client. ChocolateyGUI is a recognized
        client that is an extension of the official client. It is recommended you use the
        official client as it has the latest security fixes, the latest features, and is
        supported by the Chocolatey team.
      </p>
      <p>
        The repository for issues/enhancements/requests for Chocolatey at <a href="https://github.com/chocolatey/choco">
                                                                            GitHub Chocolatey</a>
        <br />
        <span>Note that broken packages should be reported back to package maintainers,
          not to the client repository or on the mailing list. For more information, see <a href="@Url.RouteUrl(RouteName.Docs, new { docName = "package-triage-process" })">the triage process</a>.</span>
      </p>
        </section>
</div>
<div class="bg-two p-t--l p-b--l">
  <section class="clearfix p-l p-r p-t--l p-b--l container-wide">
      <h2 class="text-center m-b">Frequently Asked Questions</h2>
      <p>
        <strong>What is the difference between Chocolatey and NuGet?</strong> NuGet is for
        development libraries, Chocolatey is a binary machine package manager. Typically
        you can think of it like this: <strong><em>"You use NuGet to get 3rd party libraries
                                                 that you use to build the tools and applications that you host on Chocolatey."</em></strong>
      </p>
      <p>
        <strong>How do I contact the Chocolatey group?</strong> The best way to do this
        is to use the <a href="https://groups.google.com/group/chocolatey">official mailing
                        list</a> (see the mailing list link below).
      </p>
      <p>
        <strong>Why can't I see my post on the mailing list?</strong> First time posters
        are moderated to cut down on spammers. Be patient and we will approve your message.
      </p>
      <p>
        <strong>Why is my software listed here? I haven't given anyone distribution permission!</strong>
        Many times the way Chocolatey works is to use PowerShell to download the package
        from the official distribution point, this way no distribution rights are violated.
        This is not always the case so feel free to reach out to the site administrators
        or <a href="@Url.RouteUrl(RouteName.ContactUs)">contact us</a> if you do have
        questions. Also see <a href="@Url.RouteUrl(RouteName.Docs, new { docName = "package-triage-process" })#are-you-a-software-vendor">Software vendor</a> 
        for more details.
      </p>
      <p>
        <strong>I am the owner of software listed here and would like to maintain the package.</strong>
        That's awesome to hear! The way this works out is to use the contact site admins
        link on the package page and we will handle reaching out to the current maintainers
        for you. Also see <a href="@Url.RouteUrl(RouteName.Docs, new { docName = "package-triage-process" })#are-you-a-software-vendor">Software vendor</a> 
        for more details.
      </p>
      <p>
        <strong>How do I know if I can trust the community feed (the packages on this site?)</strong>
        Even with moderation in place, the answer is that you can't fully trust the
        packages here. They are created by community members and although moderated to 
        determine that they are installing the software the package is based on and that
        the package itself doesn't do anything malicious, it makes no guarantees about 
        the underlying software that is installed. In some cases package maintainers do
        not implement checksums on the downloads, so there is also not a guarantee that what
        the original maintainers/moderators expected for you to get is what you get. 
        We will make checksums a requirement in the future to combat this, but for now you should
        be somewhat careful about placing full trust in something you cannot control.<br /><br />

        If you require trust (e.g. most organizations require this), you
        should have an internal feed with vetted packages using internal resources. You
        should always decide whether you trust the maintainer(s) of the package, and even
        then you may want to inspect the package prior to installing. You can inspect packages
        easily by clicking download on the package page (and then treating
        the nupkg file as a zip archive).
      </p>
      <p>
        <strong>I'm an organization wanting to use Chocolatey.</strong>
        Awesome! Many organizations use Chocolatey, but the caveat is that they don't use the packages 
        you will find on this site because they have a low tolerance for breakages, and require a higher 
        trust and control over packages.<br /><br />
        Quite a few community folks use the packages on this site, which is a feed of packages provided and 
        maintained by the community (it is also known as the community feed). Packages on the community 
        feed usually download software from official distribution points. When software owners move 
        download locations or other breakages occur because of the internet, the package is broken until 
        the new location is specified in an updated version of the package.<br /><br />
        For folks in the community that are not using Chocolatey for production purposes, it is fine to 
        use the community feed. For organizations that have a low tolerance for breakages and require a 
        higher level of security, control, and trust, a self-hosted Chocolatey server is the recommended 
        option. This guarantees that your installs, upgrades, and uninstalls will always work every 
        time. This gives you complete control over what software gets installed. Also because you are 
        vetting newer versions, you control when those newer versions are available for upgrade.<br /><br />
      
        See <a href="@Url.RouteUrl(RouteName.Docs, new { docName = "how-to-host-feed" })">Hosting your own internal server</a> 
        (it has non-Windows options as well).
      </p>
      <p>
        <strong>There is a package that has is broken, needs updating or something else.</strong>
        Please read over the <a title="Package Triage Process" href="@Url.RouteUrl(RouteName.Docs, new { docName = "package-triage-process" })">
                               Package Triage Process</a> for details.
      </p>
      <p>
        <strong>Who <em>owns</em> Chocolatey?</strong> The copyright for Chocolatey belongs
        to RealDimensions Software, LLC. RealDimensions Software, LLC is a company that Rob formed to
        support the development of FOSS software and libraries that further the ecosystem.
      </p>
      <p>
        <strong>Do you have Business or Professional editions of Chocolatey?</strong> Yes! See <a href="@Url.RouteUrl(RouteName.Pricing)">Pricing</a> for details!
      </p>
      <p>
        <strong>I need a support contract.</strong> We can work with you on that. Please see <a href="@Url.RouteUrl(RouteName.Pricing)">Pricing</a> and
        <a href="@Url.RouteUrl(RouteName.ContactUs)">contact us</a> for details! 
      </p>
      <p>
        <strong>Are there other FAQs?</strong> There is a link to the <a href="@Url.RouteUrl(RouteName.FAQ)">FAQs</a> at the top!
      </p>
      </section>
</div>
