@using NuGetGallery;
@model CourseViewModel
@{
    ViewBag.Title = "Upgrading Chocolatey";
}
@section LeftSideColumn {
    @Html.Partial("~/Views/Courses/Installation/_LeftSideColumn.cshtml")
}

<p>Once installed, Chocolatey can be upgraded in exactly the same way as any other package that has been installed using Chocolatey. Simply use the command to upgrade to the latest stable release of Chocolatey:</p>
<h4><code>choco upgrade chocolatey</code></h4>

@*Quiz*@
<div>
    <h2 class="mt-5">Test Your Skills!</h2>
    @if (!User.Identity.IsAuthenticated)
    {
        @Html.Partial("~/Views/Courses/_QuizCTA.cshtml")
    }
    else
    {
        @Html.ValidationSummary(true)
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <fieldset class="form @if(Model.UserCourseProfiles != null){foreach(var siteProfile in Model.UserCourseProfiles){if(siteProfile.Name == CourseProfileConstants.InstallingUpgradingUninstalling && siteProfile.ModTwo == true){<text>mod-completed</text>}}}">
                <legend class="d-none">Quiz</legend>
                @Html.HiddenFor(m => m.EmailAddress)
                @Html.HiddenFor(m => m.CourseName, new { Value = CourseProfileConstants.InstallingUpgradingUninstalling })
                @Html.HiddenFor(m => m.CompletedModTwo, new { Value = true })
                <div class="form-field mt-3">
                    <h5>What parameter should be provided to the install command in order to install a beta version of Chocolatey?</h5>
                    @Html.RadioButtonFor(m => m.QuestOne, "1", new { id = "QuestOneOptionOne" })
                    <label for="QuestOneOptionOne"><code>--pre</code></label><br />
                    @Html.RadioButtonFor(m => m.QuestOne, "0", new { id = "QuestOneOptionTwo" })
                    <label for="QuestOneOptionTwo"><code>--beta</code></label><br />
                    @Html.RadioButtonFor(m => m.QuestOne, "0", new { id = "QuestOneOptionThree" })
                    <label for="QuestOneOptionThree"><code>--alpha</code></label>
                </div>
                <div class="form-field mt-3">
                    <h5>What Chocolatey command can be executed to find out if there is a newer (non beta) version of Chocolatey available?</h5>
                    @Html.RadioButtonFor(m => m.QuestTwo, "0", new { id = "QuestTwoOptionOne" })
                    <label for="QuestTwoOptionOne"><code>choco list -lo</code></label><br />
                    @Html.RadioButtonFor(m => m.QuestTwo, "1", new { id = "QuestTwoOptionTwo" })
                    <label for="QuestTwoOptionTwo"><code>choco outdated</code></label><br />
                    @Html.RadioButtonFor(m => m.QuestTwo, "0", new { id = "QuestTwoOptionThree" })
                    <label for="QuestTwoOptionThree"><code>choco uninstall chocolatey</code></label>
                </div>
                <input class="btn btn-primary mt-3 disabled" data-toggle="modal" data-target="#quiz-modal" type="submit" value="Check Answers" title="Check Answers" />
            </fieldset>
        }

        if (Model.UserCourseProfiles != null)
        {
            foreach (var siteProfile in Model.UserCourseProfiles)
            {
                if (siteProfile.Name == CourseProfileConstants.InstallingUpgradingUninstalling && siteProfile.ModTwo == true && siteProfile.Completed == false)
                {
                    @Html.Partial("~/Views/Courses/Installation/_NextUrl.cshtml")
                }
                else if (siteProfile.Name == CourseProfileConstants.InstallingUpgradingUninstalling && siteProfile.Completed == true)
                {
                    <a href="@Url.Action(MVC.Users.Profiles(Model.Username))" class="btn btn-success mt-3">See Badges<span class="icon-chevron-right"></span></a>
                }
            }
        }
    }
</div>

@Html.Partial("~/Views/Courses/Installation/_Popup.cshtml")