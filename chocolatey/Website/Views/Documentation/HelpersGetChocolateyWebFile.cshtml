@{
  ViewBag.Title = "HelpersGetChocolateyWebFile";
}

<article>
<h1 id="get-chocolateywebfile">Get-ChocolateyWebFile</h1>
<p>Downloads a file from the internets.</p>
<h2 id="syntax">Syntax</h2>
<pre class="brush: ps">Get-ChocolateyWebFile `
  -PackageName &lt;String&gt; `
  -FileFullPath &lt;String&gt; `
  [-Url &lt;String&gt;] `
  [-Url64bit &lt;String&gt;] `
  [-Checksum &lt;String&gt;] `
  [-ChecksumType &lt;String&gt;] `
  [-Checksum64 &lt;String&gt;] `
  [-ChecksumType64 &lt;String&gt;] `
  [-Options &lt;Hashtable&gt;] `
  [-GetOriginalFileName] `
  [-IgnoredArguments &lt;Object[]&gt;] [&lt;CommonParameters&gt;]</pre>
<h2 id="description">Description</h2>
<p>This will download a file from a url, tracking with a progress bar.<br />
It returns the filepath to the downloaded file when it is complete.</p>
<h2 id="notes">Notes</h2>
<p>Chocolatey works best when the packages contain the software it is<br />
managing and doesn&#39;t require downloads. However most software in the<br />
Windows world requires redistribution rights and when sharing packages<br />
publicly (like on the <a href="https://chocolatey.org/packages">community feed</a>), maintainers may not have those<br />
aforementioned rights. Chocolatey understands how to work with that,<br />
hence this function. You are not subject to this limitation with<br />
internal packages.</p>
<h2 id="aliases">Aliases</h2>
<p>None</p>
<h2 id="inputs">Inputs</h2>
<p>None</p>
<h2 id="outputs">Outputs</h2>
<p>None</p>
<h2 id="parameters">Parameters</h2>
<h3 id="packagename-string">-PackageName &lt;String&gt;</h3>
<p>The name of the package - while this is an arbitrary value, it&#39;s<br />
recommended that it matches the package id.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>true</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>1</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="filefullpath-string">-FileFullPath &lt;String&gt;</h3>
<p>This is the full path of the resulting file name.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>true</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>2</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="url-string">-Url [&lt;String&gt;]</h3>
<p>This is the 32 bit url to download the resource from. This resource can<br />
be used on 64 bit systems when a package has both a Url and Url64bit<br />
specified if a user passes <code>--forceX86</code>. If there is only a 64 bit url<br />
available, please remove do not use the paramter (only use Url64bit).<br />
Will fail on 32bit systems if missing or if a user attempts to force<br />
a 32 bit installation on a 64 bit system.</p>
<p>Prefer HTTPS when available. Can be HTTP, FTP, or File URIs.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>3</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="url64bit-string">-Url64bit [&lt;String&gt;]</h3>
<p>OPTIONAL - If there is a 64 bit resource available, use this<br />
parameter. Chocolatey will automatically determine if the user is<br />
running a 64 bit OS or not and adjust accordingly. Please note that<br />
the 32 bit url will be used in the absence of this. This parameter<br />
should only be used for 64 bit native software. If the original Url<br />
contains both (which is quite rare), set this to &quot;˜$url&#39; Otherwise remove<br />
this parameter.</p>
<p>Prefer HTTPS when available. Can be HTTP, FTP, or File URIs.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>4</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="checksum-string">-Checksum [&lt;String&gt;]</h3>
<p>OPTIONAL (Highly recommended) - The checksum hash value of the Url<br />
resource. This allows a checksum to be validated for files that are not<br />
local. The checksum type is covered by ChecksumType.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="checksumtype-string">-ChecksumType [&lt;String&gt;]</h3>
<p>OPTIONAL - The type of checkum that the file is validated with - valid<br />
values are &quot;˜md5&#39;, &quot;˜sha1&#39;, &quot;˜sha256&#39; or &quot;˜sha512&#39; - defaults to &quot;˜md5&#39;.</p>
<p>MD5 is not recommended as certain organizations need to use FIPS<br />
compliant algorithms for hashing - see<br />
<a href="https://support.microsoft.com/en-us/kb/811833" class="uri">https://support.microsoft.com/en-us/kb/811833</a> for more details.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="checksum64-string">-Checksum64 [&lt;String&gt;]</h3>
<p>OPTIONAL (Highly recommended) - The checksum hash value of the Url64bit<br />
resource. This allows a checksum to be validated for files that are not<br />
local. The checksum type is covered by ChecksumType64.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="checksumtype64-string">-ChecksumType64 [&lt;String&gt;]</h3>
<p>OPTIONAL - The type of checkum that the file is validated with - valid<br />
values are &quot;˜md5&#39;, &quot;˜sha1&#39;, &quot;˜sha256&#39; or &quot;˜sha512&#39; - defaults to<br />
ChecksumType parameter value.</p>
<p>MD5 is not recommended as certain organizations need to use FIPS<br />
compliant algorithms for hashing - see<br />
<a href="https://support.microsoft.com/en-us/kb/811833" class="uri">https://support.microsoft.com/en-us/kb/811833</a> for more details.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td>$checksumType</td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="options-hashtable">-Options [&lt;Hashtable&gt;]</h3>
<p>OPTIONAL - Specify custom headers. Available in 0.9.10+.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td>@@<script type="text/javascript">
<!--
h='&#x25;&#x37;&#66;&#x25;&#x37;&#68;&#x25;&#x37;&#68;';a='&#64;';n='&#x25;&#x37;&#66;&#72;&#x65;&#x61;&#100;&#x65;&#114;&#x73;&#x3d;';e=n+a+h;
document.write('<a h'+'ref'+'="ma'+'ilto'+':'+e+'" clas'+'s="em' + 'ail">'+'&#x7b;&#72;&#x65;&#x61;&#100;&#x65;&#114;&#x73;&#x3d;&#64;&#x7b;&#x7d;&#x7d;'+'<\/'+'a'+'>');
// -->
</script><noscript>&#x7b;&#72;&#x65;&#x61;&#100;&#x65;&#114;&#x73;&#x3d;&#64;&#x7b;&#x7d;&#x7d;&#32;&#40;&#x25;&#x37;&#66;&#72;&#x65;&#x61;&#100;&#x65;&#114;&#x73;&#x3d;&#32;&#x61;&#116;&#32;&#x25;&#x37;&#66;&#x25;&#x37;&#68;&#x25;&#x37;&#68;&#x29;</noscript></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="getoriginalfilename">-GetOriginalFileName</h3>
<p>OPTIONAL switch to allow Chocolatey to determine the original file name<br />
from the url resource.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td>False</td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="ignoredarguments-object">-IgnoredArguments [&lt;Object[]&gt;]</h3>
<p>Allows splatting with arguments that do not apply. Do not use directly.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="commonparameters">&lt;CommonParameters&gt;</h3>
<p>This cmdlet supports the common parameters: -Verbose, -Debug, -ErrorAction, -ErrorVariable, -OutBuffer, and -OutVariable. For more information, see <code>about_CommonParameters</code> <a href="http://go.microsoft.com/fwlink/p/?LinkID=113216" class="uri">http://go.microsoft.com/fwlink/p/?LinkID=113216</a> .</p>
<h2 id="examples">Examples</h2>
<p><strong>EXAMPLE 1</strong></p>
<pre class="brush: ps">Get-ChocolateyWebFile &#39;__NAME__&#39; &#39;C:\somepath\somename.exe&#39; &#39;URL&#39; &#39;64BIT_URL_DELETE_IF_NO_64BIT&#39;
</pre>
<p><strong>EXAMPLE 2</strong></p>
<pre class="brush: ps">
# Download from an HTTPS location
$toolsDir = &quot;$(Split-Path -parent $MyInvocation.MyCommand.Definition)&quot;
Get-ChocolateyWebFile -PackageName &#39;bob&#39; -FileFullPath &quot;$toolsDir\bob.exe&quot; -Url &#39;https://somewhere/bob.exe&#39;</pre>
<p><strong>EXAMPLE 3</strong></p>
<pre class="brush: ps">
# Download from FTP
$toolsDir = &quot;$(Split-Path -Parent $MyInvocation.MyCommand.Definition)&quot;
Get-ChocolateyWebFile -PackageName &#39;bob&#39; -FileFullPath &quot;$toolsDir\bob.exe&quot; -Url &#39;ftp://somewhere/bob.exe&#39;</pre>
<p><strong>EXAMPLE 4</strong></p>
<pre class="brush: ps">
# Download from a file share
$toolsDir = &quot;$(Split-Path -Parent $MyInvocation.MyCommand.Definition)&quot;
Get-ChocolateyWebFile -PackageName &#39;bob&#39; -FileFullPath &quot;$toolsDir\bob.exe&quot; -Url &#39;file:///\\fileshare\location\bob.exe&#39;</pre>
<p><strong>EXAMPLE 5</strong></p>
<pre class="brush: ps">
$options =
@@{
  Headers = @@{
    Accept = &#39;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#39;;
    &#39;Accept-Charset&#39; = &#39;ISO-8859-1,utf-8;q=0.7,*;q=0.3&#39;;
    &#39;Accept-Language&#39; = &#39;en-GB,en-US;q=0.8,en;q=0.6&#39;;
    Cookie = &#39;requiredinfo=info&#39;;
    Referer = &#39;https://somelocation.com/&#39;;
  }
}

Get-ChocolateyWebFile -PackageName &#39;package&#39; -FileFullPath &quot;$(Split-Path -Parent $MyInvocation.MyCommand.Definition)\thefile.exe&quot; -Url &#39;https://somelocation.com/thefile.exe&#39; -Options $options</pre>
<h2 id="links">Links</h2>
<ul>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-package" })">Install-ChocolateyPackage</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-web-file" })">Get-WebFile</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-web-file-name" })">Get-WebFileName</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-ftp-file" })">Get-FtpFile</a></li>
</ul>
<p><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-reference" })">Function Reference</a></p>
<p><strong><em>NOTE:</em></strong> This documentation has been automatically generated from <code>Import-Module &quot;$env:ChocolateyInstall\helpers\chocolateyInstaller.psm1&quot; -Force; Get-Help Get-ChocolateyWebFile -Full</code>.</p>
</article>
