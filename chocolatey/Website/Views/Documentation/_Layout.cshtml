﻿@{
  Layout = "~/Views/Shared/_BaseLayout.cshtml";

  //css
  //Bundles.Reference("Content/highlight/solarized-dark.css", "bottom");
  Bundles.Reference("Content/highlight/vs.css", "bottom");
  //js
  Bundles.Reference("Scripts/highlight");
  Bundles.Reference("Scripts/anchorjs");
}
@section css
{
  @RenderSection("css", required: false)
}
@section ExtraHeaders
{
  @RenderSection("ExtraHeaders", required: false)
}
@section TopScripts
{
  @RenderSection("TopScripts", required: false)
}
<body class="bg-one">
  <main class="docs">
    <aside>
      <a class="logo" href="@Url.Home()">
        <img class=" hide-on-small" alt="Logo" src="@Url.Content("~/content/images/logo_square.svg")">
      </a>
      <ul>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "home" })">Docs Home</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "why" })">Why Chocolatey?</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "security" })">Security</a></li>
      </ul>

      <p><strong>Features</strong></p>
      <ul>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "features-synchronize" })">Package Synchronizer - Synchronize with Programs and Features</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "features-agent-service" })">Background Mode - Allow Non-Administrators To Install/Upgrade Software!</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "features-create-packages-from-installers" })">Package Builder - Create Packages Automatically from Installers!</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "features-automatically-recompile-packages" })">Package Internalizer - Automatically Internalize Existing Packages (Recompile)!</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "features-virus-check" })">Runtime Malware Protection</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "features-private-cdn" })">Private CDN Cache</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "features-install-directory-override" })">Install Directory Override</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "features-infrastructure-automation" })">Infrastructure Automation Integration</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "how-to-host-feed" })">Host Your Own Server</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "features-shim" })">Shims - Automatically add executables to PATH w/out clutter</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "how-to-create-custom-package-templates" })">Create Custom Package Templates</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "how-to-create-extensions" })">Extend Chocolatey With PowerShell Modules (extensions)</a></li>
      </ul>

      <p><strong>General</strong></p>
      <ul>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "release-notes" })">Release Notes</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "release-notes-licensed" })">Licensed Release Notes</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "chocolatey-faqs" })">FAQs</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "moderation" })">Chocolatey.org Moderation</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "community-packages-disclaimer" })">Chocolatey.org Packages Disclaimer</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "package-triage-process" })#are-you-a-software-vendor">Software Vendor?</a></li>
      </ul>

      <p><strong>Usage</strong></p>
      <p><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "getting-started" })#how-does-chocolatey-work">How does choco work?</a></p>
      <ul>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "installation" })">How to install</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "installation-licensed" })">How to install licensed edition</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "uninstallation" })">How to uninstall</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "getting-started" })">Getting Started</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "proxy-settings-for-chocolatey" })">Proxy Settings</a></li>
        <li><strong>Commands:</strong><ul>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-reference" })#how-to-pass-options-switches">Passing args to choco</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-reference" })">Complete Reference</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-list" })">List / Search</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-info" })">Info</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-install" })">Install</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-pin" })">Pin</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-outdated" })">Outdated</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-upgrade" })">Upgrade</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-uninstall" })">Uninstall</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-config" })">Config</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-sources" })">Source / Sources</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-feature" })">Feature</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-download" })">Download</a></li>
                                      <li>See other commands related to creating packages below</li>
                                    </ul>
        </li>
      </ul>
      <p><strong>Creating Packages</strong></p>
      <ul>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "create-packages" })">Create Packages</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "create-packages-quick-start" })">Quick Start</a></li>
        <li>
          <strong>Commands:</strong><ul>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-new" })">New</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-pack" })">Pack</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-apikey" })">Apikey</a></li>
                                      <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-push" })">Push</a></li>
                                    </ul>
        </li>
        <li><strong>PowerShell Reference:</strong><ul>
                                                    <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-reference" })">Function and Variable Reference</a></li>
                                                    <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-package" })">Install-ChocolateyPackage</a></li>
                                                    <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-zip-package" })">Install-ChocolateyZipPackage</a></li>
                                                    <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-powershell-command" })">Install-ChocolateyPowershellCommand</a></li>
                                                    <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-vsix-package" })">Install-ChocolateyVsixPackage</a></li>
                                                    <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-chocolatey-web-file" })">Get-ChocolateyWebFile</a></li>
                                                    <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-install-package" })">Install-ChocolateyInstallPackage</a></li>
                                                  </ul>
        </li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "automatic-packages" })">Automatic Packaging</a></li>
      </ul>
      <p><strong>How To&#39;s</strong></p>
      <ul>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "proxy-settings-for-chocolatey" })">Use Chocolatey w/Proxy Server</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "how-to-change-cache" })">Change Download Cache Location aka Don&#39;t use TEMP for downloads</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "how-to-install-upgrade-package-without-scripts" })">Install/Upgrade a Package w/out running install scripts</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "package-triage-process" })">Request Package Fixes/Updates</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "how-to-recompile-packages" })">Manually Recompile Packages, Embedding/Internalizing Remote Resources</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "package-triage-process" })">Request Package</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "package-triage-process" })#i-want-to-take-overhelp-with-package-maintenance-for-my-software">Maintain Packages for My Software</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "package-triage-process" })">Become a Maintainer</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "package-mantainer-handover" })">Take Over Package Maintenance Exclusively</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "how-to-parse-package-parameters-argument" })">Parse Package Parameters</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "how-to-mount-an-iso-in-chocolatey-package" })">Mount Iso</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "how-to-create-custom-package-templates" })">Create Custom Package Templates</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "how-to-deprecate-a-chocolatey-package" })">Deprecate a Package</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "installation-licensed" })">How to install licensed edition</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "how-to-set-up-chocolatey-server" })">How to set up the Chocolatey.Server</a></li>
      </ul>
      <p><strong>Use Cases</strong></p>
      <ul>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "development-environment-setup" })">Development Environment</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "hosting-chocolatey-packages-on-myget" })">Host on MyGet</a></li>
      </ul>
      <p><strong>Learning Resources</strong></p>
      <ul>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "resources" })">Resources</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "videos" })">Videos</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "presentations" })">Presentations</a></li>
      </ul>
      <p><strong>Other</strong></p>
      <ul>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "why" })">Why Chocolatey?</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "legal" })">Legal</a></li>
        <li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "history" })">History</a></li>
      </ul>
    </aside>

    @RenderBody()
  </main>
  @Bundles.RenderStylesheets("bottom")
  @Bundles.RenderScripts()

    <script type="text/javascript">
        window.onload = function () {
            // remove leading linebreaks from code blocks.
            var pre = document.getElementsByTagName("code");
            for (var i = 0, len = pre.length; i < len; i++) {
                var text = pre[i].firstChild.nodeValue;
                pre[i].firstChild.nodeValue = text.replace(/^\n+|\n+$/g, "");
            }
        }
        hljs.initHighlightingOnLoad();

        anchors.options.placement = 'left';
        anchors.add();
    </script>
</body>