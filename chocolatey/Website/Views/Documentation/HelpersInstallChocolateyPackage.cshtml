@{
  ViewBag.Title = "HelpersInstallChocolateyPackage";
}

<article>
<h1 id="install-chocolateypackage">Install-ChocolateyPackage</h1>
<p><strong>NOTE:</strong> Administrative Access Required.</p>
<p>Installs software into &quot;Programs and Features&quot; based on a remote file<br />
download. Use Install-ChocolateyInstallPackage when local or embedded<br />
file.</p>
<h2 id="syntax">Syntax</h2>
<pre class="brush: ps">Install-ChocolateyPackage `
  -PackageName &lt;String&gt; `
  [-FileType &lt;String&gt;] `
  [-SilentArgs &lt;String[]&gt;] `
  [-Url &lt;String&gt;] `
  [-Url64bit &lt;String&gt;] `
  [-ValidExitCodes &lt;Object&gt;] `
  [-Checksum &lt;String&gt;] `
  [-ChecksumType &lt;String&gt;] `
  [-Checksum64 &lt;String&gt;] `
  [-ChecksumType64 &lt;String&gt;] `
  [-Options &lt;Hashtable&gt;] `
  [-UseOnlyPackageSilentArguments] `
  [-UseOriginalLocation] `
  [-IgnoredArguments &lt;Object[]&gt;] [&lt;CommonParameters&gt;]</pre>
<h2 id="description">Description</h2>
<p>This will download a native installer from a url and install it on your<br />
machine. Has error handling built in.</p>
<p>If you are embedding the file(s) directly in the package (or do not need<br />
to download a file first), use Install-ChocolateyInstallPackage instead.</p>
<h2 id="notes">Notes</h2>
<p>This command will assert UAC/Admin privileges on the machine.</p>
<p>This is a native installer wrapper function. A &quot;true&quot; package will<br />
contain all the run time files and not an installer. That could come<br />
pre-zipped and require unzipping in a PowerShell script. Chocolatey<br />
works best when the packages contain the software it is managing. Most<br />
software in the Windows world comes as installers and Chocolatey<br />
understands how to work with that, hence this wrapper function.</p>
<p>Chocolatey works best when the packages contain the software it is<br />
managing and doesn&#39;t require downloads. However most software in the<br />
Windows world requires redistribution rights and when sharing packages<br />
publicly (like on the <a href="https://chocolatey.org/packages">community feed</a>), maintainers may not have those<br />
aforementioned rights. Chocolatey understands how to work with that,<br />
hence this function. You are not subject to this limitation with<br />
internal packages.</p>
<h2 id="aliases">Aliases</h2>
<p>None</p>
<h2 id="examples">Examples</h2>
<p><strong>EXAMPLE 1</strong></p>
<pre class="brush: ps">
$packageName= &#39;bob&#39;
$toolsDir   = &quot;$(Split-Path -Parent $MyInvocation.MyCommand.Definition)&quot;
$url        = &#39;https://somewhere.com/file.msi&#39;
$url64      = &#39;https://somewhere.com/file-x64.msi&#39;

$packageArgs = @@{
  packageName   = $packageName
  fileType      = &#39;msi&#39;
  url           = $url
  url64bit      = $url64
  silentArgs    = &quot;/qn /norestart&quot;
  validExitCodes= @@(0, 3010, 1641)
  softwareName  = &#39;Bob*&#39;
  checksum      = &#39;12345&#39;
  checksumType  = &#39;sha256&#39;
  checksum64    = &#39;123356&#39;
  checksumType64= &#39;sha256&#39;
}

Install-ChocolateyPackage @@packageArgs</pre>
<p><strong>EXAMPLE 2</strong></p>
<pre class="brush: ps">
Install-ChocolateyPackage &#39;StExBar&#39; &#39;msi&#39; &#39;/quiet&#39; `
 &#39;http://stexbar.googlecode.com/files/StExBar-1.8.3.msi&#39; `
 &#39;http://stexbar.googlecode.com/files/StExBar64-1.8.3.msi&#39;</pre>
<p><strong>EXAMPLE 3</strong></p>
<pre class="brush: ps">
Install-ChocolateyPackage &#39;mono&#39; &#39;exe&#39; &#39;/SILENT&#39; `
 &#39;http://somehwere/something.exe&#39; -ValidExitCodes @@(0,21)</pre>
<p><strong>EXAMPLE 4</strong></p>
<pre class="brush: ps">
Install-ChocolateyPackage &#39;ruby.devkit&#39; &#39;exe&#39; &#39;/SILENT&#39; `
 &#39;http://cdn.rubyinstaller.org/archives/devkits/DevKit-mingw64-32-4.7.2-20130224-1151-sfx.exe&#39; `
 &#39;http://cdn.rubyinstaller.org/archives/devkits/DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe&#39; `
 -checksum &#39;9383f12958aafc425923e322460a84de&#39; -checksumType &#39;md5&#39; `
 -checksum64 &#39;ce99d873c1acc8bffc639bd4e764b849&#39;</pre>
<p><strong>EXAMPLE 5</strong></p>
<pre class="brush: ps">Install-ChocolateyPackage &#39;bob&#39; &#39;exe&#39; &#39;/S&#39; &#39;https://somewhere/bob.exe&#39; &#39;https://somewhere/bob-x64.exe&#39;
</pre>
<p><strong>EXAMPLE 6</strong></p>
<pre class="brush: ps">
$options =
@@{
  Headers = @@{
    Accept = &#39;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#39;;
    &#39;Accept-Charset&#39; = &#39;ISO-8859-1,utf-8;q=0.7,*;q=0.3&#39;;
    &#39;Accept-Language&#39; = &#39;en-GB,en-US;q=0.8,en;q=0.6&#39;;
    Cookie = &#39;requiredinfo=info&#39;;
    Referer = &#39;https://somelocation.com/&#39;;
  }
}

Install-ChocolateyPackage -PackageName &#39;package&#39; -FileType &#39;exe&#39; -SilentArgs &#39;/S&#39; &#39;https://somelocation.com/thefile.exe&#39; -Options $options</pre>
<h2 id="inputs">Inputs</h2>
<p>None</p>
<h2 id="outputs">Outputs</h2>
<p>None</p>
<h2 id="parameters">Parameters</h2>
<h3 id="packagename-string">-PackageName &lt;String&gt;</h3>
<p>The name of the package - while this is an arbitrary value, it&#39;s<br />
recommended that it matches the package id.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>true</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>1</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="filetype-string">-FileType [&lt;String&gt;]</h3>
<p>This is the extension of the file. This can be &quot;˜exe&#39;, &quot;˜msi&#39;, or &quot;˜msu&#39;.<br />
<a href="https://chocolatey.org/compare">Licensed editions</a> of Chocolatey use this to automatically determine<br />
silent arguments. If this is not provided, Chocolatey will<br />
automatically determine this using the downloaded file&#39;s extension.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td>installerType, installType</td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>2</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td>exe</td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="silentargs-string">-SilentArgs [&lt;String[]&gt;]</h3>
<p>OPTIONAL - These are the parameters to pass to the native installer,<br />
including any arguments to make the installer silent/unattended.<br />
<a href="https://chocolatey.org/compare">Licensed editions</a> of Chocolatey will automatically determine the<br />
installer type and merge the arguments with what is provided here.</p>
<p>Try any of the to get the silent (unattended) installer -<br />
<code>/s /S /q /Q /quiet /silent /SILENT /VERYSILENT</code>. With msi it is always<br />
<code>/quiet</code>. Please pass it in still but it will be overridden by<br />
Chocolatey to <code>/quiet</code>. If you don&#39;t pass anything it could invoke the<br />
installer with out any arguments. That means a nonsilent installer.</p>
<p>Please include the <code>notSilent</code> tag in your Chocolatey package if you<br />
are not setting up a silent/unattended package. Please note that if you<br />
are submitting to the <a href="https://chocolatey.org/packages">community repository</a>, it is nearly a requirement<br />
for the package to be completely unattended.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>3</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="url-string">-Url [&lt;String&gt;]</h3>
<p>This is the 32 bit url to download the resource from. This resource can<br />
be used on 64 bit systems when a package has both a Url and Url64bit<br />
specified if a user passes <code>--forceX86</code>. If there is only a 64 bit url<br />
available, please remove do not use the paramter (only use Url64bit).<br />
Will fail on 32bit systems if missing or if a user attempts to force<br />
a 32 bit installation on a 64 bit system.</p>
<p>Prefer HTTPS when available. Can be HTTP, FTP, or File URIs.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>4</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="url64bit-string">-Url64bit [&lt;String&gt;]</h3>
<p>OPTIONAL - If there is a 64 bit resource available, use this<br />
parameter. Chocolatey will automatically determine if the user is<br />
running a 64 bit OS or not and adjust accordingly. Please note that<br />
the 32 bit url will be used in the absence of this. This parameter<br />
should only be used for 64 bit native software. If the original Url<br />
contains both (which is quite rare), set this to &quot;˜$url&#39; Otherwise remove<br />
this parameter.</p>
<p>Prefer HTTPS when available. Can be HTTP, FTP, or File URIs.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td>url64</td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>5</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="validexitcodes-object">-ValidExitCodes [&lt;Object&gt;]</h3>
<p>Array of exit codes indicating success. Defaults to <code>@@(0)</code>.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td>@@(0)</td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="checksum-string">-Checksum [&lt;String&gt;]</h3>
<p>The checksum hash value of the Url resource. This allows a checksum to<br />
be validated for files that are not local. The checksum type is covered<br />
by ChecksumType.</p>
<p><strong>NOTE:</strong> Checksums in packages are meant as a measure to validate the<br />
originally intended file that was used in the creation of a package is<br />
the same file that is received at a future date. Since this is used for<br />
other steps in the process related to the <a href="https://chocolatey.org/packages">community repository</a>, it<br />
ensures that the file a user receives is the same file a maintainer<br />
and a moderator (if applicable), plus any moderation review has<br />
intended for you to receive with this package. If you are looking at a<br />
remote source that uses the same url for updates, you will need to<br />
ensure the package also stays updated in line with those remote<br />
resource updates. You should look into <a href="https://chocolatey.org/docs/automatic-packages">automatic packaging</a><br />
to help provide that functionality.</p>
<p><strong>NOTE:</strong> To determine checksums, you can get that from the original<br />
site if provided. You can also use the <a href="https://chocolatey.org/packages/checksum">checksum tool available on<br />
the [community feed](https://chocolatey.org/packages)</a> (<code>choco install checksum</code>)<br />
and use it e.g. <code>checksum -t sha256 -f path\to\file</code>. Ensure you<br />
provide checksums for all remote resources used.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="checksumtype-string">-ChecksumType [&lt;String&gt;]</h3>
<p>The type of checkum that the file is validated with - valid<br />
values are &quot;˜md5&#39;, &quot;˜sha1&#39;, &quot;˜sha256&#39; or &quot;˜sha512&#39; - defaults to &quot;˜md5&#39;.</p>
<p>MD5 is not recommended as certain organizations need to use FIPS<br />
compliant algorithms for hashing - see<br />
<a href="https://support.microsoft.com/en-us/kb/811833" class="uri">https://support.microsoft.com/en-us/kb/811833</a> for more details.</p>
<p>The recommendation is to use at least SHA256.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="checksum64-string">-Checksum64 [&lt;String&gt;]</h3>
<p>OPTIONAL if no Url64bit - The checksum hash value of the Url64bit<br />
resource. This allows a checksum to be validated for files that are not<br />
local. The checksum type is covered by ChecksumType64.</p>
<p><strong>NOTE:</strong> Checksums in packages are meant as a measure to validate the<br />
originally intended file that was used in the creation of a package is<br />
the same file that is received at a future date. Since this is used for<br />
other steps in the process related to the <a href="https://chocolatey.org/packages">community repository</a>, it<br />
ensures that the file a user receives is the same file a maintainer<br />
and a moderator (if applicable), plus any moderation review has<br />
intended for you to receive with this package. If you are looking at a<br />
remote source that uses the same url for updates, you will need to<br />
ensure the package also stays updated in line with those remote<br />
resource updates. You should look into <a href="https://chocolatey.org/docs/automatic-packages">automatic packaging</a><br />
to help provide that functionality.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="checksumtype64-string">-ChecksumType64 [&lt;String&gt;]</h3>
<p>OPTIONAL - The type of checkum that the file is validated with - valid<br />
values are &quot;˜md5&#39;, &quot;˜sha1&#39;, &quot;˜sha256&#39; or &quot;˜sha512&#39; - defaults to<br />
ChecksumType parameter value.</p>
<p>MD5 is not recommended as certain organizations need to use FIPS<br />
compliant algorithms for hashing - see<br />
<a href="https://support.microsoft.com/en-us/kb/811833" class="uri">https://support.microsoft.com/en-us/kb/811833</a> for more details.</p>
<p>The recommendation is to use at least SHA256.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="options-hashtable">-Options [&lt;Hashtable&gt;]</h3>
<p>OPTIONAL - Specify custom headers. Available in 0.9.10+.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td>@@<script type="text/javascript">
<!--
h='&#x25;&#x37;&#66;&#x25;&#x37;&#68;&#x25;&#x37;&#68;';a='&#64;';n='&#x25;&#x37;&#66;&#72;&#x65;&#x61;&#100;&#x65;&#114;&#x73;&#x3d;';e=n+a+h;
document.write('<a h'+'ref'+'="ma'+'ilto'+':'+e+'" clas'+'s="em' + 'ail">'+'&#x7b;&#72;&#x65;&#x61;&#100;&#x65;&#114;&#x73;&#x3d;&#64;&#x7b;&#x7d;&#x7d;'+'<\/'+'a'+'>');
// -->
</script><noscript>&#x7b;&#72;&#x65;&#x61;&#100;&#x65;&#114;&#x73;&#x3d;&#64;&#x7b;&#x7d;&#x7d;&#32;&#40;&#x25;&#x37;&#66;&#72;&#x65;&#x61;&#100;&#x65;&#114;&#x73;&#x3d;&#32;&#x61;&#116;&#32;&#x25;&#x37;&#66;&#x25;&#x37;&#68;&#x25;&#x37;&#68;&#x29;</noscript></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="useonlypackagesilentarguments">-UseOnlyPackageSilentArguments</h3>
<p>Do not allow choco to provide/merge additional silent arguments and only<br />
use the ones available with the package. Available in 0.9.10+.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td>useOnlyPackageSilentArgs</td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td>False</td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="useoriginallocation">-UseOriginalLocation</h3>
<p>Do not download the resources. This is typically passed if Url/Url64bit<br />
are pointed to local files or files on a share and those files should<br />
be used in place. Available in 0.10.1+.</p>
<p>NOTE: You can also use <code>Install-ChocolateyInstallPackage</code> for the same<br />
functionality (see links).</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td>False</td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="ignoredarguments-object">-IgnoredArguments [&lt;Object[]&gt;]</h3>
<p>Allows splatting with arguments that do not apply. Do not use directly.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="commonparameters">&lt;CommonParameters&gt;</h3>
<p>This cmdlet supports the common parameters: -Verbose, -Debug, -ErrorAction, -ErrorVariable, -OutBuffer, and -OutVariable. For more information, see <code>about_CommonParameters</code> <a href="http://go.microsoft.com/fwlink/p/?LinkID=113216" class="uri">http://go.microsoft.com/fwlink/p/?LinkID=113216</a> .</p>
<h2 id="links">Links</h2>
<ul>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-chocolatey-web-file" })">Get-ChocolateyWebFile</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-install-package" })">Install-ChocolateyInstallPackage</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-uninstall-registry-key" })">Get-UninstallRegistryKey</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-zip-package" })">Install-ChocolateyZipPackage</a></li>
</ul>
<p><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-reference" })">Function Reference</a></p>
<p><strong><em>NOTE:</em></strong> This documentation has been automatically generated from <code>Import-Module &quot;$env:ChocolateyInstall\helpers\chocolateyInstaller.psm1&quot; -Force; Get-Help Install-ChocolateyPackage -Full</code>.</p>
<p>View the source for <a href="https://github.com/chocolatey/choco/tree/stable/src/chocolatey.resources/helpers/functions/Install-ChocolateyPackage.ps1">Install-ChocolateyPackage</a></p>
</article>
