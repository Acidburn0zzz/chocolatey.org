@{
  ViewBag.Title = "How-To-Set-Up-Chocolatey-Server";
}

<article>
<h1 id="how-to-setup-the-chocolateyserver-package">How To Setup the Chocolatey.Server Package</h1>
<!-- TOC -->
<ul>
<li><a href="#what-is-chocolateyserver">What is Chocolatey.Server?</a></li>
<li><a href="#setup-with-puppet">Setup with Puppet</a></li>
<li><a href="#setup-normally">Setup Normally</a></li>
<li><a href="#additional-configuration">Additional Configuration</a>
<ul>
<li><a href="#performance">Performance</a>
<ul>
<li><a href="#future">Future</a></li>
</ul></li>
</ul></li>
<li><a href="#common-errors-and-resolutions">Common Errors and Resolutions</a>
<ul>
<li><a href="#error-500">Error 500</a></li>
<li><a href="#error-50019---the-requested-page-cannot-be-accessed-because-the-related-configuration-data-for-the-page-is-invalid">Error 500.19 - &quot;The requested page cannot be accessed because the related configuration data for the page is invalid.&quot;</a></li>
<li><a href="#other-error">Other error</a></li>
</ul></li>
</ul>
<!-- /TOC -->
<h2 id="what-is-chocolateyserver">What is Chocolatey.Server?</h2>
<p>The <a href="https://chocolatey.org/packages/chocolatey.server">Chocolatey.Server package</a> contains the binaries for a fully ready to go Chocolatey NuGet Server where you can serve packages over HTTP using a NuGet-compatible OData feed.</p>
<p><a href="https://chocolatey.org/packages/chocolatey.server">Chocolatey Server</a> is a simple Nuget.Server that is ready to rock and roll. It has already completed Steps 1–3 of NuGet&#39;s <a href="https://docs.nuget.org/Create/Hosting-Your-Own-NuGet-Feeds#creating-remote-feeds">host your own remote feed</a>. Version 0.1.2 has the following additional adds:</p>
<ul>
<li>Uses same enhanced NuGet that Chocolatey uses so you can see more information in search if you choose to use those things.</li>
<li>Allows packages up to 2GB. Package size can be controlled through <a href="https://msdn.microsoft.com/en-us/library/ms689462(v=vs.90).aspx">maxAllowedContentLength</a> and <a href="https://msdn.microsoft.com/en-us/library/e1f13641(v=vs.100).aspx">maxRequestLength</a>.</li>
</ul>
<p>When you install it, it will install the website typically to <code>c:\tools\chocolatey.server</code>.</p>
<h2 id="setup-with-puppet">Setup with Puppet</h2>
<p>If you are using the Puppet module <a href="https://forge.puppet.com/chocolatey/chocolatey_server">chocolatey/chocolatey_server</a>, it will do all of the additional setup for this package and allow some customization.</p>
<p>The module works with Windows Server 2008/2012.<br />
For a simple <code>include chocolatey_server</code> it does the following automatically:</p>
<ul>
<li>Ensures IIS is installed</li>
<li>Ensures ASP.NET is installed</li>
<li>Ensures the chocolatey.server package is installed</li>
<li>Ensures an app pool for the chocolatey.server site</li>
<li>Ensures the IIS website is setup for chocolatey.server</li>
<li>Ensures permissions for the site are set correctly.</li>
</ul>
<h2 id="setup-normally">Setup Normally</h2>
<ul>
<li>If your Windows updates are not up to date, there are two required Windows updates you are going to need (heads up they take awhile)<br />
* Install KB2919355 - <code>choco install KB2919355 -y</code> - this one or the other Windows update takes a <strong><em>very</em></strong> long time to install, just be patient<br />
* Restart your machine.<br />
* Install KB2919355 - <code>choco install KB2919355 -y</code> (IIRC this is the one that takes forever...) -<br />
* Reboot that machine again</li>
<li>You need at least .NET Framework 4.6. If you don&#39;t have that or newer, then run <code>choco install dotnet4.6.1 -y</code><br />
* Reboot one more time, thanks Windows!!</li>
<li>Install or upgrade the package - <code>choco upgrade chocolatey.server -y</code></li>
<li>Ensure IIS is installed. You can try <code>choco install IIS-WebServer --source windowsfeatures</code></li>
<li>Ensure that ASP.NET is installed. Try <code>choco install IIS-ASPNET45 --source windowsfeatures</code> (Windows Server 2012). Use <code>IIS-ASPNET</code> for Windows Server 2008, possibly <code>IIS-ASPNET46</code> for Windows Server 2016.</li>
<li>Disable or remove the Default website</li>
<li>Set up an app pool for Chocolatey.Server. Ensure 32-bit is enabled and the managed runtime version is <code>v4.0</code> (or some version of 4).</li>
<li>Set up an IIS website pointed to the install location and set it to use the app pool.</li>
<li>Go to explorer and right click on <code>c:\tools\chocolatey.server</code> and add the following permissions:
<ul>
<li><code>IIS_IUSRS</code> - Read</li>
<li><code>IUSR</code> - Read</li>
<li><code>IIS APPPOOL\&lt;app pool name&gt;</code> - Read</li>
</ul></li>
<li>Right click on the <code>App_Data</code> subfolder and add the following permissions:
<ul>
<li><code>IIS_IUSRS</code> - Modify</li>
<li><code>IIS APPPOOL\&lt;app pool name&gt;</code> - Modify</li>
</ul></li>
</ul>
<h2 id="additional-configuration">Additional Configuration</h2>
<p>Looking for where the apikey is and how it is changed, that is all done through the web.config. The config is pretty well-documented on each of the appSettings key values.</p>
<p>To update the apiKey, it is kept in the web.config, search for that value and update it. If you reach out to the server on <a href="https://localhost" class="uri">https://localhost</a> (it will show you what the apikey is, only locally though).</p>
<h3 id="performance">Performance</h3>
<p>To configure for performance, you will want to do the following:</p>
<ul>
<li>Keep the site warm (<a href="https://serverfault.com/a/595215/79259" class="uri">https://serverfault.com/a/595215/79259</a>):
<ul>
<li>Turn on Application Initialization in Windows Features under Web Server (IIS) -&gt; Web Server -&gt; Application Development -&gt; Application Initialization (you can also try <code>choco install IIS-ApplicationInit --source windowsfeatures</code>)</li>
<li>Application Pool Advanced Settings:
<ul>
<li>General: Start Mode -&gt; Always Running</li>
<li>Process Model: Idle Time-out (minutes) -&gt; 0</li>
<li>Recycling: Regular Time Interval (minutes) -&gt; 0</li>
</ul></li>
<li>Under the Site&#39;s Advanced Settings:
<ul>
<li>Preload Enabled -&gt; True</li>
</ul></li>
</ul></li>
</ul>
<h4 id="future">Future</h4>
<p>We are looking to add support for the package source to automatically handle this aspect - <a href="http://blog.nuget.org/20150922/Accelerate-Package-Source.html" class="uri">http://blog.nuget.org/20150922/Accelerate-Package-Source.html</a></p>
<h2 id="common-errors-and-resolutions">Common Errors and Resolutions</h2>
<p>When you are attempting to install the Simple Server, you may run into some errors depending on your configuration. Here are some common ones we&#39;ve seen that you may get when you browse to the the site.</p>
<h3 id="error-500">Error 500</h3>
<p>Take a closer look at the error. It may be one of the other errors below.</p>
<h3 id="error-50019---the-requested-page-cannot-be-accessed-because-the-related-configuration-data-for-the-page-is-invalid">Error 500.19 - &quot;The requested page cannot be accessed because the related configuration data for the page is invalid.&quot;</h3>
<p>This can mean a couple of things:</p>
<ul>
<li>You missed ensuring the website is using an app pool that is at least .NET 4.0. Check the app pool that your site is using, then ensure that app pool has <code>32-bit</code> enabled and the managed runtime version is <code>v4.0</code> (or some version of 4).</li>
<li>You have made a change to the xml file and it is not valid xml. This typically happens if you put an xml escape character into the password (<code>&amp;</code>). To do that you would need to set CData around the value or use a different password. It could also happen if you accidentallly change the xml and it is no longer valid.</li>
</ul>
<h3 id="other-error">Other error</h3>
<p>Turn on customErrors under system.web - <customErrors mode="Off" /> - see this guide to set it - <a href="https://stackify.com/web-config-customerrors-asp-net/" class="uri">https://stackify.com/web-config-customerrors-asp-net/</a></p>
<p>Then browse to the site to see if you can gather any more information.</p>
<p>If so, and you are a commercial edition customer, please open a support ticket. If you are using open source Chocolatey, please open a ticket at <a href="https://github.com/chocolatey/simple-server/issues" class="uri">https://github.com/chocolatey/simple-server/issues</a>.</p>
</article>
