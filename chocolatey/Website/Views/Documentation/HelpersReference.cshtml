@{
  ViewBag.Title = "HelpersReference";
}

<article>
<h1 id="powershell-functions-aka-helpers-reference">PowerShell Functions aka Helpers Reference</h1>
<h2 id="main-functions">Main Functions</h2>
<p>These functions call other functions and many times may be the only thing you need in your <a href="@Url.RouteUrl(RouteName.Docs, new { docName = "chocolatey-install-ps1" })">chocolateyInstall.ps1 file</a>.</p>
<ul>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-package" })">Install-ChocolateyPackage</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-zip-package" })">Install-ChocolateyZipPackage</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-powershell-command" })">Install-ChocolateyPowershellCommand</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-vsix-package" })">Install-ChocolateyVsixPackage</a></li>
</ul>
<h2 id="error-success-functions">Error / Success Functions</h2>
<ul>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-write-chocolatey-success" })">Write-ChocolateySuccess</a> - <strong>DEPRECATED</strong></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-write-chocolatey-failure" })">Write-ChocolateyFailure</a> - <strong>DEPRECATED</strong></li>
</ul>
<p>You really don&#39;t need a try catch with Chocolatey PowerShell files anymore.</p>
<h2 id="more-functions">More Functions</h2>
<h3 id="administrative-access-functions">Administrative Access Functions</h3>
<p>When creating packages that need to run one of the following commands below, one should add the tag <code>admin</code> to the nuspec.</p>
<ul>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-package" })">Install-ChocolateyPackage</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-start-chocolatey-process-as-admin" })">Start-ChocolateyProcessAsAdmin</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-install-package" })">Install-ChocolateyInstallPackage</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-path" })">Install-ChocolateyPath</a> - when specifying machine path</li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-environment-variable" })">Install-ChocolateyEnvironmentVariable</a> - when specifying machine path</li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-explorer-menu-item" })">Install-ChocolateyExplorerMenuItem</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-file-association" })">Install-ChocolateyFileAssociation</a></li>
</ul>
<h3 id="non-administrator-safe-functions">Non-Administrator Safe Functions</h3>
<p>When you have a need to run Chocolatey without Administrative access required (non-default install location), you can run the following functions without administrative access.</p>
<p>These are the functions from above as one list.</p>
<ul>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-zip-package" })">Install-ChocolateyZipPackage</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-powershell-command" })">Install-ChocolateyPowershellCommand</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-write-chocolatey-success" })">Write-ChocolateySuccess</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-write-chocolatey-failure" })">Write-ChocolateyFailure</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-chocolatey-web-file" })">Get-ChocolateyWebFile</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-chocolatey-unzip" })">Get-ChocolateyUnzip</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-path" })">Install-ChocolateyPath</a> - when specifying user path</li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-environment-variable" })">Install-ChocolateyEnvironmentVariable</a> - when specifying user path</li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-desktop-link" })">Install-ChocolateyDesktopLink</a> - <strong>DEPRECATED</strong> - see <a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-shortcut" })">Install-ChocolateyShortcut</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-pinned-task-bar-item" })">Install-ChocolateyPinnedTaskBarItem</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-shortcut" })">Install-ChocolateyShortcut</a> - v0.9.9+</li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-update-session-environment" })">Update-SessionEnvironment</a></li>
</ul>
<h2 id="complete-list-alphabetical-order">Complete List (alphabetical order)</h2>
<ul>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-tools-location" })">Get-ToolsLocation</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-o-s-architecture-width" })">Get-OSArchitectureWidth</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-uninstall-bin-file" })">Uninstall-BinFile</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-format-file-size" })">Format-FileSize</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-checksum-valid" })">Get-ChecksumValid</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-chocolatey-unzip" })">Get-ChocolateyUnzip</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-chocolatey-web-file" })">Get-ChocolateyWebFile</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-environment-variable" })">Get-EnvironmentVariable</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-environment-variable-names" })">Get-EnvironmentVariableNames</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-ftp-file" })">Get-FtpFile</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-o-s-architecture-width" })">Get-OSArchitectureWidth</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-tools-location" })">Get-ToolsLocation</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-u-a-c-enabled" })">Get-UACEnabled</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-virus-check-valid" })">Get-VirusCheckValid</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-web-file" })">Get-WebFile</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-web-file-name" })">Get-WebFileName</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-web-headers" })">Get-WebHeaders</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-bin-file" })">Install-BinFile</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-desktop-link" })">Install-ChocolateyDesktopLink</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-environment-variable" })">Install-ChocolateyEnvironmentVariable</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-explorer-menu-item" })">Install-ChocolateyExplorerMenuItem</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-file-association" })">Install-ChocolateyFileAssociation</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-install-package" })">Install-ChocolateyInstallPackage</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-package" })">Install-ChocolateyPackage</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-path" })">Install-ChocolateyPath</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-pinned-task-bar-item" })">Install-ChocolateyPinnedTaskBarItem</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-powershell-command" })">Install-ChocolateyPowershellCommand</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-shortcut" })">Install-ChocolateyShortcut</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-vsix-package" })">Install-ChocolateyVsixPackage</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-zip-package" })">Install-ChocolateyZipPackage</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-vsix" })">Install-Vsix</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-set-environment-variable" })">Set-EnvironmentVariable</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-set-power-shell-exit-code" })">Set-PowerShellExitCode</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-start-chocolatey-process-as-admin" })">Start-ChocolateyProcessAsAdmin</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-test-process-admin-rights" })">Test-ProcessAdminRights</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-uninstall-bin-file" })">Uninstall-BinFile</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-uninstall-chocolatey-environment-variable" })">Uninstall-ChocolateyEnvironmentVariable</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-uninstall-chocolatey-package" })">Uninstall-ChocolateyPackage</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-uninstall-chocolatey-zip-package" })">Uninstall-ChocolateyZipPackage</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-update-session-environment" })">Update-SessionEnvironment</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-write-chocolatey-failure" })">Write-ChocolateyFailure</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-write-chocolatey-success" })">Write-ChocolateySuccess</a></li>
<li><p><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-write-file-update-log" })">Write-FileUpdateLog</a></p>
<h2 id="variables">Variables</h2></li>
</ul>
<p>There are also a number of environment variables providing access to some values from the nuspec and other information that may be useful. They are accessed via <code>$env:variableName</code>.</p>
<ul>
<li><strong>chocolateyPackageFolder</strong> = the folder where Chocolatey has downloaded and extracted the NuGet package, typically <code>C:\ProgramData\chocolatey\lib\packageName</code>.</li>
<li><strong>chocolateyPackageName</strong> (since 0.9.9.0) = The package name, which is equivalent to the <code>&lt;id&gt;</code> tag in the nuspec</li>
<li><strong>chocolateyPackageVersion</strong> (since 0.9.9.0) = The package version, which is equivalent to the <code>&lt;version&gt;</code> tag in the nuspec</li>
</ul>
<p>chocolateyPackageVersion</code> may be particularly useful, since that would allow you in some cases to create packages for new releases of the updated software by only changing the <code>&lt;version&gt;</code> in the nuspec and not having to touch the <code>chocolateyInstall.ps1</code> at all. An example of this:</p>
<pre class="brush: ps">$url = &quot;http://www.thesoftware.com/downloads/thesoftware-$env:chocolateyPackageVersion.zip&quot;

Install-ChocolateyZipPackage &#39;$env:chocolateyPackageName&#39; $url $binRoot</pre>
</article>
