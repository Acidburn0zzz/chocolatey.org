@{
    ViewBag.Title = "";
}

<article>
  <h1 id="install-chocolateyenvironmentvariable">Install-ChocolateyEnvironmentVariable</h1>
<p>Creates a persistent environment variable</p>
<h2 id="syntax">Syntax</h2>
<pre><code class="lang-powershell">Install-ChocolateyEnvironmentVariable `
  [-VariableName &lt;String&gt;] `
  [-VariableValue &lt;String&gt;] `
  [-VariableType {Process | User | Machine}]
</code></pre>
<h2 id="description">Description</h2>
<p>Install-ChocolateyEnvironmentVariable creates an environment variable
with the specified name and value. The variable is persistent and
will remain after reboots and across multiple PowerShell and command
line sessions. The variable can be scoped either to the user or to
the machine. If machine level scoping is specified, the command is
elevated to an administrative session.</p>
<h2 id="notes">Notes</h2>
<p>This command will assert UAC/Admin privileges on the machine when
<code>-VariableType Machine</code>.</p>
<h2 id="aliases">Aliases</h2>
<p>None</p>
<h2 id="inputs">Inputs</h2>
<p>None</p>
<h2 id="outputs">Outputs</h2>
<p>None</p>
<h2 id="parameters">Parameters</h2>
<h3 id="-variablename-string-">-VariableName [&lt;String&gt;]</h3>
<p>The name or key of the environment variable</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>Aliases</td>
<td></td>
</tr>
<tr>
<td>Required?</td>
<td>false</td>
</tr>
<tr>
<td>Position?</td>
<td>1</td>
</tr>
<tr>
<td>Default Value</td>
<td></td>
</tr>
<tr>
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="-variablevalue-string-">-VariableValue [&lt;String&gt;]</h3>
<p>A string value assigned to the above name.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>Aliases</td>
<td></td>
</tr>
<tr>
<td>Required?</td>
<td>false</td>
</tr>
<tr>
<td>Position?</td>
<td>2</td>
</tr>
<tr>
<td>Default Value</td>
<td></td>
</tr>
<tr>
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="-variabletype">-VariableType</h3>
<p>Specifies whether this variable is to be accesible at either the
individual user level or at the Machine level.</p>
<p>Valid options: Process, User, Machine</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>Aliases</td>
<td></td>
</tr>
<tr>
<td>Required?</td>
<td>false</td>
</tr>
<tr>
<td>Position?</td>
<td>3</td>
</tr>
<tr>
<td>Default Value</td>
<td>User</td>
</tr>
<tr>
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h2 id="examples">Examples</h2>
<p> <strong>EXAMPLE 1</strong></p>
<pre><code class="lang-powershell">
# Creates a User environmet variable &quot;JAVA_HOME&quot; pointing to
# &quot;d:\oracle\jdk\bin&quot;.
Install-ChocolateyEnvironmentVariable &quot;JAVA_HOME&quot; &quot;d:\oracle\jdk\bin&quot;
</code></pre>
<p><strong>EXAMPLE 2</strong></p>
<pre><code class="lang-powershell">
# Creates a User environmet variable &quot;_NT_SYMBOL_PATH&quot; pointing to
# &quot;symsrv*symsrv.dll*f:\localsymbols*http://msdl.microsoft.com/download/symbols&quot;.
# The command will be elevated to admin priviledges.
Install-ChocolateyEnvironmentVariable `
  -VariableName &quot;_NT_SYMBOL_PATH&quot; `
  -VariableValue &quot;symsrv*symsrv.dll*f:\localsymbols*http://msdl.microsoft.com/download/symbols&quot; `
  -VariableType Machine
</code></pre>
<p><a href="HelpersReference">Function Reference</a></p>
<p><strong><em>NOTE:</em></strong> This documentation has been automatically generated from <code>Import-Module &quot;$env:ChocolateyInstall\helpers\chocolateyInstaller.psm1&quot; -Force; Get-Help Install-ChocolateyEnvironmentVariable -Full</code>.</p>

</article>
