@{
  ViewBag.Title = "HelpersGetChecksumValid";
}

<article>
<h1 id="get-checksumvalid">Get-ChecksumValid</h1>
<p>Checks a file&#39;s checksum versus a passed checksum and checksum type.</p>
<h2 id="syntax">Syntax</h2>
<pre class="brush: ps">Get-ChecksumValid `
  -File &lt;String&gt; `
  [-Checksum &lt;String&gt;] `
  [-ChecksumType &lt;String&gt;] `
  [-IgnoredArguments &lt;Object[]&gt;] [&lt;CommonParameters&gt;]</pre>
<h2 id="description">Description</h2>
<p>Makes a determination if a file meets an expected checksum. This<br />
function is usually used when comparing a file that is downloaded from<br />
an official distribution point. If the checksum fails to<br />
match, this function throws an error.</p>
<h2 id="notes">Notes</h2>
<p>This uses the checksum.exe tool available separately at<br />
<a href="https://chocolatey.org/packages/checksum" class="uri">https://chocolatey.org/packages/checksum</a>.</p>
<h2 id="aliases">Aliases</h2>
<p>None</p>
<h2 id="examples">Examples</h2>
<p><strong>EXAMPLE 1</strong></p>
<pre class="brush: ps">Get-CheckSumValid -File $fileFullPath -CheckSum $checksum -ChecksumType $checksumType
</pre>
<h2 id="inputs">Inputs</h2>
<p>None</p>
<h2 id="outputs">Outputs</h2>
<p>None</p>
<h2 id="parameters">Parameters</h2>
<h3 id="file-string">-File &lt;String&gt;</h3>
<p>The full path to a binary file that is checksummed and compared to the<br />
passed Checksum parameter value.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>true</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>1</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="checksum-string">-Checksum [&lt;String&gt;]</h3>
<p>The expected checksum hash value of the File resource. The checksum<br />
type is covered by ChecksumType.</p>
<p><strong>NOTE:</strong> Checksums in packages are meant as a measure to validate the<br />
originally intended file that was used in the creation of a package is<br />
the same file that is received at a future date. Since this is used for<br />
other steps in the process related to the <a href="https://chocolatey.org/packages">community repository</a>, it<br />
ensures that the file a user receives is the same file a maintainer<br />
and a moderator (if applicable), plus any moderation review has<br />
intended for you to receive with this package. If you are looking at a<br />
remote source that uses the same url for updates, you will need to<br />
ensure the package also stays updated in line with those remote<br />
resource updates. You should look into <a href="https://chocolatey.org/docs/automatic-packages">automatic packaging</a><br />
to help provide that functionality.</p>
<p><strong>NOTE:</strong> To determine checksums, you can get that from the original<br />
site if provided. You can also use the <a href="https://chocolatey.org/packages/checksum">checksum tool available on<br />
the [community feed](https://chocolatey.org/packages)</a> (<code>choco install checksum</code>)<br />
and use it e.g. <code>checksum -t sha256 -f path\to\file</code>. Ensure you<br />
provide checksums for all remote resources used.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>2</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="checksumtype-string">-ChecksumType [&lt;String&gt;]</h3>
<p>The type of checkum that the file is validated with - &quot;˜md5&#39;, &quot;˜sha1&#39;,<br />
&quot;˜sha256&#39; or &quot;˜sha512&#39; - defaults to &quot;˜md5&#39;.</p>
<p>MD5 is not recommended as certain organizations need to use FIPS<br />
compliant algorithms for hashing - see<br />
<a href="https://support.microsoft.com/en-us/kb/811833" class="uri">https://support.microsoft.com/en-us/kb/811833</a> for more details.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>3</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td>md5</td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="ignoredarguments-object">-IgnoredArguments [&lt;Object[]&gt;]</h3>
<p>Allows splatting with arguments that do not apply. Do not use directly.</p>
<table>
<thead>
<tr class="header">
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Aliases</td>
<td></td>
</tr>
<tr class="even">
<td>Required?</td>
<td>false</td>
</tr>
<tr class="odd">
<td>Position?</td>
<td>named</td>
</tr>
<tr class="even">
<td>Default Value</td>
<td></td>
</tr>
<tr class="odd">
<td>Accept Pipeline Input?</td>
<td>false</td>
</tr>
</tbody>
</table>
<h3 id="commonparameters">&lt;CommonParameters&gt;</h3>
<p>This cmdlet supports the common parameters: -Verbose, -Debug, -ErrorAction, -ErrorVariable, -OutBuffer, and -OutVariable. For more information, see <code>about_CommonParameters</code> <a href="http://go.microsoft.com/fwlink/p/?LinkID=113216" class="uri">http://go.microsoft.com/fwlink/p/?LinkID=113216</a> .</p>
<h2 id="links">Links</h2>
<ul>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-get-chocolatey-web-file" })">Get-ChocolateyWebFile</a></li>
<li><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-install-chocolatey-package" })">Install-ChocolateyPackage</a></li>
</ul>
<p><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "helpers-reference" })">Function Reference</a></p>
<p><strong><em>NOTE:</em></strong> This documentation has been automatically generated from <code>Import-Module &quot;$env:ChocolateyInstall\helpers\chocolateyInstaller.psm1&quot; -Force; Get-Help Get-ChecksumValid -Full</code>.</p>
</article>
