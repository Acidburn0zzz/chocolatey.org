@{
  ViewBag.Title = "CommandsInfo";
}

<article>
<!-- This file is automatically generated based on output from https://github.com/chocolatey/choco/tree/stable/src/chocolatey/infrastructure.app/commands/ChocolateyInfoCommand.cs using https://github.com/chocolatey/choco/tree/stable/GenerateDocs.ps1. Contributions are welcome at the original location(s). If the file is not found, it is not part of the open source edition of Chocolatey or the name of the file is different. -->
<h1 id="info-command-choco-info">Info Command (choco info)</h1>
<p>Chocolatey will perform a search for a package local or remote and provide<br />
detailed information about that package. This is a synonym for<br />
<code>choco search &lt;pkgname&gt; --exact --detailed</code>.</p>
<p><strong>NOTE:</strong> New as of 0.9.10.0.</p>
<!-- TOC -->
<ul>
<li><a href="#usage">Usage</a></li>
<li><a href="#examples">Examples</a></li>
<li><a href="#exit-codes">Exit Codes</a></li>
<li><a href="#options-and-switches">Options and Switches</a></li>
</ul>
<!-- /TOC -->
<h2 id="usage">Usage</h2>
<pre><code class="nohighlight">  choco info [&lt;options/switches&gt;]</code></pre>
<h2 id="examples">Examples</h2>
<pre><code class="nohighlight">  choco info chocolatey
  choco info googlechrome
  choco info powershell</code></pre>
<p><strong>NOTE:</strong> See scripting in <a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-reference" })#how-to-pass-options-switches">how to pass arguments</a> (<code>choco -?</code>) for how to<br />
write proper scripts and integrations.</p>
<h2 id="exit-codes">Exit Codes</h2>
<p>Exit codes that normally result from running this command.</p>
<p>Normal:</p>
<ul>
<li>0: operation was successful, no issues detected</li>
<li>–1 or 1: an error has occurred</li>
</ul>
<p>Enhanced:</p>
<ul>
<li>0: operation was successful, no issues detected</li>
<li>–1 or 1: an error has occurred</li>
<li>2: no results (enhanced)</li>
</ul>
<p><strong>NOTE:</strong> Starting in v0.10.12, if you have the feature &#39;useEnhancedExitCodes&#39;<br />
turned on, then choco will provide enhanced exit codes that allow<br />
better integration and scripting.</p>
<p>If you find other exit codes that we have not yet documented, please<br />
file a ticket so we can document it at<br />
<a href="https://github.com/chocolatey/choco/issues/new/choose" class="uri">https://github.com/chocolatey/choco/issues/new/choose</a>.</p>
<h2 id="options-and-switches">Options and Switches</h2>
<p><strong>NOTE:</strong> Options and switches apply to all items passed, so if you are<br />
running a command like install that allows installing multiple<br />
packages, and you use <code>--version=1.0.0</code>, it is going to look for and<br />
try to install version 1.0.0 of every package passed. So please split<br />
out multiple package calls when wanting to pass specific options.</p>
<p>Includes <a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-reference" })#default-options-and-switches">default options/switches</a> (included below for completeness).</p>
<pre><code class="nohighlight">
 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature &#39;logWithoutColor&#39;, set to &#39;False&#39;. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don&#39;t actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. &#39;0&#39; for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of &#39;&#39;. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicity
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       &#39;123&#39;. Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicity proxy (`--proxy` or config setting) and
       user name.  Overrides the default proxy password (encrypted in settings
       if set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicity proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of &#39;&#39;. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicity proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of &#39;True&#39;. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.

 -s, --source=VALUE
     Source - Source location for install. Can use special &#39;webpi&#39; or
       &#39;windowsfeatures&#39; sources. Defaults to sources.

 -l, --lo, --localonly, --local-only
     LocalOnly - Only search against local machine items.

     --version=VALUE
     Version - Specific version of a package to return.

     --pre, --prerelease
     Prerelease - Include Prereleases? Defaults to false.

 -u, --user=VALUE
     User - used with authenticated feeds. Defaults to empty.

 -p, --password=VALUE
     Password - the user&#39;s password to the source. Defaults to empty.

     --cert=VALUE
     Client certificate - PFX pathname for an x509 authenticated feeds.
       Defaults to empty. Available in 0.9.10+.

     --cp, --certpassword=VALUE
     Certificate Password - the client certificate&#39;s password to the source.
       Defaults to empty. Available in 0.9.10+.
</code></pre>
<p><a href="@Url.RouteUrl(RouteName.Docs, new { docName = "commands-reference" })">Command Reference</a></p>
<p><strong><em>NOTE:</em></strong> This documentation has been automatically generated from <code>choco info -h</code>.</p>
</article>
